{"remainingRequest":"/Users/simplephi/Documents/riswan/stock_darah/admin/node_modules/babel-loader/lib/index.js!/Users/simplephi/Documents/riswan/stock_darah/admin/node_modules/quasar/src/utils/uid.js","dependencies":[{"path":"/Users/simplephi/Documents/riswan/stock_darah/admin/node_modules/quasar/src/utils/uid.js","mtime":1758930417125},{"path":"/Users/simplephi/Documents/riswan/stock_darah/admin/babel.config.js","mtime":1755527684372},{"path":"/Users/simplephi/Documents/riswan/stock_darah/admin/node_modules/cache-loader/dist/cjs.js","mtime":1758930418112},{"path":"/Users/simplephi/Documents/riswan/stock_darah/admin/node_modules/babel-loader/lib/index.js","mtime":1758930419036}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuYXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maW5kLWxhc3QuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maW5kLWxhc3QtaW5kZXguanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zZXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lc25leHQudHlwZWQtYXJyYXkudG8tcmV2ZXJzZWQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lc25leHQudHlwZWQtYXJyYXkudG8tc29ydGVkLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXNuZXh0LnR5cGVkLWFycmF5LndpdGguanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5wdXNoLmpzIjsKLyoqCiAqIEJhc2VkIG9uIHRoZSB3b3JrIG9mIGh0dHBzOi8vZ2l0aHViLmNvbS9qY2hvb2svdXVpZC1yYW5kb20KICovCgpsZXQgYnVmLAogIGJ1ZklkeCA9IDA7CmNvbnN0IGhleEJ5dGVzID0gbmV3IEFycmF5KDI1Nik7CgovLyBQcmUtY2FsY3VsYXRlIHRvU3RyaW5nKDE2KSBmb3Igc3BlZWQKZm9yIChsZXQgaSA9IDA7IGkgPCAyNTY7IGkrKykgewogIGhleEJ5dGVzW2ldID0gKGkgKyAweDEwMCkudG9TdHJpbmcoMTYpLnN1YnN0cigxKTsKfQoKLy8gVXNlIGJlc3QgYXZhaWxhYmxlIFBSTkcKY29uc3QgcmFuZG9tQnl0ZXMgPSAoKCkgPT4gewogIC8vIE5vZGUgJiBCcm93c2VyIHN1cHBvcnQKICBjb25zdCBsaWIgPSB0eXBlb2YgY3J5cHRvICE9PSAndW5kZWZpbmVkJyA/IGNyeXB0byA6IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnID8gd2luZG93Lm1zQ3J5cHRvIC8vIElFMTEKICA6IHZvaWQgMDsKICBpZiAobGliICE9PSB2b2lkIDApIHsKICAgIGlmIChsaWIucmFuZG9tQnl0ZXMgIT09IHZvaWQgMCkgewogICAgICByZXR1cm4gbGliLnJhbmRvbUJ5dGVzOwogICAgfQogICAgaWYgKGxpYi5nZXRSYW5kb21WYWx1ZXMgIT09IHZvaWQgMCkgewogICAgICByZXR1cm4gbiA9PiB7CiAgICAgICAgdmFyIGJ5dGVzID0gbmV3IFVpbnQ4QXJyYXkobik7CiAgICAgICAgbGliLmdldFJhbmRvbVZhbHVlcyhieXRlcyk7CiAgICAgICAgcmV0dXJuIGJ5dGVzOwogICAgICB9OwogICAgfQogIH0KICByZXR1cm4gbiA9PiB7CiAgICBjb25zdCByID0gW107CiAgICBmb3IgKGxldCBpID0gbjsgaSA+IDA7IGktLSkgewogICAgICByLnB1c2goTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMjU2KSk7CiAgICB9CiAgICByZXR1cm4gcjsKICB9Owp9KSgpOwoKLy8gQnVmZmVyIHJhbmRvbSBudW1iZXJzIGZvciBzcGVlZAovLyBSZWR1Y2UgbWVtb3J5IHVzYWdlIGJ5IGRlY3JlYXNpbmcgdGhpcyBudW1iZXIgKG1pbiAxNikKLy8gb3IgaW1wcm92ZSBzcGVlZCBieSBpbmNyZWFzaW5nIHRoaXMgbnVtYmVyICh0cnkgMTYzODQpCmNvbnN0IEJVRkZFUl9TSVpFID0gNDA5NjsKZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gKCkgewogIC8vIEJ1ZmZlciBzb21lIHJhbmRvbSBieXRlcyBmb3Igc3BlZWQKICBpZiAoYnVmID09PSB2b2lkIDAgfHwgYnVmSWR4ICsgMTYgPiBCVUZGRVJfU0laRSkgewogICAgYnVmSWR4ID0gMDsKICAgIGJ1ZiA9IHJhbmRvbUJ5dGVzKEJVRkZFUl9TSVpFKTsKICB9CiAgY29uc3QgYiA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGJ1ZiwgYnVmSWR4LCBidWZJZHggKz0gMTYpOwogIGJbNl0gPSBiWzZdICYgMHgwZiB8IDB4NDA7CiAgYls4XSA9IGJbOF0gJiAweDNmIHwgMHg4MDsKICByZXR1cm4gaGV4Qnl0ZXNbYlswXV0gKyBoZXhCeXRlc1tiWzFdXSArIGhleEJ5dGVzW2JbMl1dICsgaGV4Qnl0ZXNbYlszXV0gKyAnLScgKyBoZXhCeXRlc1tiWzRdXSArIGhleEJ5dGVzW2JbNV1dICsgJy0nICsgaGV4Qnl0ZXNbYls2XV0gKyBoZXhCeXRlc1tiWzddXSArICctJyArIGhleEJ5dGVzW2JbOF1dICsgaGV4Qnl0ZXNbYls5XV0gKyAnLScgKyBoZXhCeXRlc1tiWzEwXV0gKyBoZXhCeXRlc1tiWzExXV0gKyBoZXhCeXRlc1tiWzEyXV0gKyBoZXhCeXRlc1tiWzEzXV0gKyBoZXhCeXRlc1tiWzE0XV0gKyBoZXhCeXRlc1tiWzE1XV07Cn0="},{"version":3,"names":["buf","bufIdx","hexBytes","Array","i","toString","substr","randomBytes","lib","crypto","window","msCrypto","getRandomValues","n","bytes","Uint8Array","r","push","Math","floor","random","BUFFER_SIZE","b","prototype","slice","call"],"sources":["/Users/simplephi/Documents/riswan/stock_darah/admin/node_modules/quasar/src/utils/uid.js"],"sourcesContent":["/**\n * Based on the work of https://github.com/jchook/uuid-random\n */\n\nlet\n  buf,\n  bufIdx = 0\nconst hexBytes = new Array(256)\n\n// Pre-calculate toString(16) for speed\nfor (let i = 0; i < 256; i++) {\n  hexBytes[i] = (i + 0x100).toString(16).substr(1)\n}\n\n// Use best available PRNG\nconst randomBytes = (() => {\n  // Node & Browser support\n  const lib = typeof crypto !== 'undefined'\n    ? crypto\n    : (\n      typeof window !== 'undefined'\n        ? window.msCrypto // IE11\n        : void 0\n    )\n\n  if (lib !== void 0) {\n    if (lib.randomBytes !== void 0) {\n      return lib.randomBytes\n    }\n    if (lib.getRandomValues !== void 0) {\n      return n => {\n        var bytes = new Uint8Array(n)\n        lib.getRandomValues(bytes)\n        return bytes\n      }\n    }\n  }\n\n  return n => {\n    const r = []\n    for (let i = n; i > 0; i--) {\n      r.push(Math.floor(Math.random() * 256))\n    }\n    return r\n  }\n})()\n\n// Buffer random numbers for speed\n// Reduce memory usage by decreasing this number (min 16)\n// or improve speed by increasing this number (try 16384)\nconst BUFFER_SIZE = 4096\n\nexport default function () {\n  // Buffer some random bytes for speed\n  if (buf === void 0 || (bufIdx + 16 > BUFFER_SIZE)) {\n    bufIdx = 0\n    buf = randomBytes(BUFFER_SIZE)\n  }\n\n  const b = Array.prototype.slice.call(buf, bufIdx, (bufIdx += 16))\n  b[6] = (b[6] & 0x0f) | 0x40\n  b[8] = (b[8] & 0x3f) | 0x80\n\n  return hexBytes[b[0]] + hexBytes[b[1]] +\n    hexBytes[b[2]] + hexBytes[b[3]] + '-' +\n    hexBytes[b[4]] + hexBytes[b[5]] + '-' +\n    hexBytes[b[6]] + hexBytes[b[7]] + '-' +\n    hexBytes[b[8]] + hexBytes[b[9]] + '-' +\n    hexBytes[b[10]] + hexBytes[b[11]] +\n    hexBytes[b[12]] + hexBytes[b[13]] +\n    hexBytes[b[14]] + hexBytes[b[15]]\n}\n"],"mappings":"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"}]}
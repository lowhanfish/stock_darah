{"remainingRequest":"/Users/simplephi/Documents/riswan/stock_darah/admin/node_modules/babel-loader/lib/index.js!/Users/simplephi/Documents/riswan/stock_darah/admin/node_modules/quasar/src/components/uploader/uploader-xhr-mixin.js","dependencies":[{"path":"/Users/simplephi/Documents/riswan/stock_darah/admin/node_modules/quasar/src/components/uploader/uploader-xhr-mixin.js","mtime":1758930417125},{"path":"/Users/simplephi/Documents/riswan/stock_darah/admin/babel.config.js","mtime":1755527684372},{"path":"/Users/simplephi/Documents/riswan/stock_darah/admin/node_modules/cache-loader/dist/cjs.js","mtime":1758930418112},{"path":"/Users/simplephi/Documents/riswan/stock_darah/admin/node_modules/babel-loader/lib/index.js","mtime":1758930419036}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["getFn","prop","props","url","Function","String","method","type","default","fieldName","file","name","headers","Array","formFields","withCredentials","Boolean","sendRaw","batch","factory","data","xhrs","promises","workingThreads","computed","xhrProps","isUploading","isBusy","length","methods","abort","forEach","x","abortPromises","upload","canUpload","queue","queuedFiles","slice","__runFactory","files","__uploadFiles","res","$emit","Error","catch","then","push","failed","err","_isBeingDestroyed","_isDestroyed","filter","p","concat","f","__updateFile","form","FormData","xhr","XMLHttpRequest","getProp","arg","console","error","fields","field","append","value","uploadIndex","uploadIndexSize","uploadedSize","maxUploadSize","aborted","addEventListener","e","loaded","Math","min","size","i","uploaded","onreadystatechange","readyState","status","uploadedFiles","open","head","setRequestHeader","__abort","send","Blob"],"sources":["/Users/simplephi/Documents/riswan/stock_darah/admin/node_modules/quasar/src/components/uploader/uploader-xhr-mixin.js"],"sourcesContent":["function getFn (prop) {\n  return typeof prop === 'function'\n    ? prop\n    : () => prop\n}\n\nexport default {\n  props: {\n    url: [ Function, String ],\n    method: {\n      type: [ Function, String ],\n      default: 'POST'\n    },\n    fieldName: {\n      type: [ Function, String ],\n      default: file => file.name\n    },\n    headers: [ Function, Array ],\n    formFields: [ Function, Array ],\n    withCredentials: [ Function, Boolean ],\n    sendRaw: [ Function, Boolean ],\n\n    batch: [ Function, Boolean ],\n    factory: Function\n  },\n\n  data () {\n    return {\n      xhrs: [],\n      promises: [],\n      workingThreads: 0\n    }\n  },\n\n  computed: {\n    xhrProps () {\n      return {\n        url: getFn(this.url),\n        method: getFn(this.method),\n        headers: getFn(this.headers),\n        formFields: getFn(this.formFields),\n        fieldName: getFn(this.fieldName),\n        withCredentials: getFn(this.withCredentials),\n        sendRaw: getFn(this.sendRaw),\n        batch: getFn(this.batch)\n      }\n    },\n\n    isUploading () {\n      return this.workingThreads > 0\n    },\n\n    isBusy () {\n      return this.promises.length > 0\n    }\n  },\n\n  methods: {\n    abort () {\n      this.xhrs.forEach(x => { x.abort() })\n\n      if (this.promises.length > 0) {\n        this.abortPromises = true\n      }\n    },\n\n    upload () {\n      if (this.canUpload === false) {\n        return\n      }\n\n      const queue = this.queuedFiles.slice(0)\n      this.queuedFiles = []\n\n      if (this.xhrProps.batch(queue)) {\n        this.__runFactory(queue)\n      }\n      else {\n        queue.forEach(file => {\n          this.__runFactory([ file ])\n        })\n      }\n    },\n\n    __runFactory (files) {\n      this.workingThreads++\n\n      if (typeof this.factory !== 'function') {\n        this.__uploadFiles(files, {})\n        return\n      }\n\n      const res = this.factory(files)\n\n      if (!res) {\n        this.$emit(\n          'factory-failed',\n          new Error('QUploader: factory() does not return properly'),\n          files\n        )\n        this.workingThreads--\n      }\n      else if (typeof res.catch === 'function' && typeof res.then === 'function') {\n        this.promises.push(res)\n\n        const failed = err => {\n          if (this._isBeingDestroyed !== true && this._isDestroyed !== true) {\n            this.promises = this.promises.filter(p => p !== res)\n\n            if (this.promises.length === 0) {\n              this.abortPromises = false\n            }\n\n            this.queuedFiles = this.queuedFiles.concat(files)\n            files.forEach(f => { this.__updateFile(f, 'failed') })\n\n            this.$emit('factory-failed', err, files)\n            this.workingThreads--\n          }\n        }\n\n        res.then(factory => {\n          if (this.abortPromises === true) {\n            failed(new Error('Aborted'))\n          }\n          else if (this._isBeingDestroyed !== true && this._isDestroyed !== true) {\n            this.promises = this.promises.filter(p => p !== res)\n            this.__uploadFiles(files, factory)\n          }\n        }).catch(failed)\n      }\n      else {\n        this.__uploadFiles(files, res || {})\n      }\n    },\n\n    __uploadFiles (files, factory) {\n      const\n        form = new FormData(),\n        xhr = new XMLHttpRequest()\n\n      const getProp = (name, arg) => {\n        return factory[name] !== void 0\n          ? getFn(factory[name])(arg)\n          : this.xhrProps[name](arg)\n      }\n\n      const url = getProp('url', files)\n\n      if (!url) {\n        console.error('q-uploader: invalid or no URL specified')\n        this.workingThreads--\n        return\n      }\n\n      const fields = getProp('formFields', files)\n      fields !== void 0 && fields.forEach(field => {\n        form.append(field.name, field.value)\n      })\n\n      let\n        uploadIndex = 0,\n        uploadIndexSize = 0,\n        uploadedSize = 0,\n        maxUploadSize = 0,\n        aborted\n\n      xhr.upload.addEventListener('progress', e => {\n        if (aborted === true) { return }\n\n        const loaded = Math.min(maxUploadSize, e.loaded)\n\n        this.uploadedSize += loaded - uploadedSize\n        uploadedSize = loaded\n\n        let size = uploadedSize - uploadIndexSize\n        for (let i = uploadIndex; size > 0 && i < files.length; i++) {\n          const\n            file = files[i],\n            uploaded = size > file.size\n\n          if (uploaded) {\n            size -= file.size\n            uploadIndex++\n            uploadIndexSize += file.size\n            this.__updateFile(file, 'uploading', file.size)\n          }\n          else {\n            this.__updateFile(file, 'uploading', size)\n            return\n          }\n        }\n      }, false)\n\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState < 4) {\n          return\n        }\n\n        if (xhr.status && xhr.status < 400) {\n          this.uploadedFiles = this.uploadedFiles.concat(files)\n          files.forEach(f => { this.__updateFile(f, 'uploaded') })\n          this.$emit('uploaded', { files, xhr })\n        }\n        else {\n          aborted = true\n          this.uploadedSize -= uploadedSize\n          this.queuedFiles = this.queuedFiles.concat(files)\n          files.forEach(f => { this.__updateFile(f, 'failed') })\n          this.$emit('failed', { files, xhr })\n        }\n\n        this.workingThreads--\n        this.xhrs = this.xhrs.filter(x => x !== xhr)\n      }\n\n      xhr.open(\n        getProp('method', files),\n        url\n      )\n\n      if (getProp('withCredentials', files) === true) {\n        xhr.withCredentials = true\n      }\n\n      const headers = getProp('headers', files)\n      headers !== void 0 && headers.forEach(head => {\n        xhr.setRequestHeader(head.name, head.value)\n      })\n\n      const sendRaw = getProp('sendRaw', files)\n\n      files.forEach(file => {\n        this.__updateFile(file, 'uploading', 0)\n        if (sendRaw !== true) {\n          form.append(getProp('fieldName', file), file, file.name)\n        }\n        file.xhr = xhr\n        file.__abort = () => { xhr.abort() }\n        maxUploadSize += file.size\n      })\n\n      this.$emit('uploading', { files, xhr })\n      this.xhrs.push(xhr)\n\n      if (sendRaw === true) {\n        xhr.send(new Blob(files))\n      }\n      else {\n        xhr.send(form)\n      }\n    }\n  }\n}\n"],"mappings":"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"}]}